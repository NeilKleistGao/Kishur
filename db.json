{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/kaze/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/busuanzi.min.js","path":"js/lib/busuanzi.min.js","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/lozad.min.js","path":"js/lib/lozad.min.js","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/md5.min.js","path":"js/lib/md5.min.js","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/lightbox/baguetteBox.min.css","path":"js/lib/lightbox/baguetteBox.min.css","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/lightbox/baguetteBox.min.js","path":"js/lib/lightbox/baguetteBox.min.js","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/prism/prism-coy.min.css","path":"js/lib/prism/prism-coy.min.css","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/prism/prism-dark.min.css","path":"js/lib/prism/prism-dark.min.css","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/prism/prism-funky.min.css","path":"js/lib/prism/prism-funky.min.css","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/prism/prism-line-numbers.min.css","path":"js/lib/prism/prism-line-numbers.min.css","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/prism/prism-okaidia.min.css","path":"js/lib/prism/prism-okaidia.min.css","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/prism/prism-solarizedlight.min.css","path":"js/lib/prism/prism-solarizedlight.min.css","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/prism/prism-tomorrow.min.css","path":"js/lib/prism/prism-tomorrow.min.css","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/prism/prism-twilight.min.css","path":"js/lib/prism/prism-twilight.min.css","modified":0,"renderable":1},{"_id":"themes/kaze/source/js/lib/prism/prism.min.css","path":"js/lib/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/kaze/source/img/ruby.png","path":"img/ruby.png","modified":0,"renderable":1},{"_id":"themes/kaze/source/img/cirno.png","path":"img/cirno.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"207d5ddb4e0a9973e033dc9c2d87bd26dfb8020f","modified":1655966523439},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"2ff89bff8cd707cc7e09eff7841a9211b768e657","modified":1655655542092},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"d2772ece6d4422ccdaa0359c3e07588834044052","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"414914ebb159fac1922b056b905e570ac7521925","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"dfd555c00e85ffc4207c88968d12b219c1f086ec","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f215d92a882247a7cc5ea80b241bedfcec0ea6ca","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"c1acd247e14588cdf101a69460cb8319c18cd078","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"581b0cbefdaa5f894922133989dd2d3bf71ded79","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"9c451e5efd72c5bb8b56e8c2b94be731e99db05b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"80759482d07063c091e940f964a1cf6693d3d406","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":499162500000},{"_id":"node_modules/hexo-theme-landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":499162500000},{"_id":"themes/3-hexo/.DS_Store","hash":"0770f9d42bfdd8d420de48fed463015e001cf579","modified":1655730678548},{"_id":"themes/3-hexo/.gitignore","hash":"86a50fa08e69cab561892aa5edef24f9081bbde1","modified":1655730678548},{"_id":"themes/3-hexo/LICENSE","hash":"b04140c5f682db2b300428f97bb164fd7f5f18bd","modified":1655730678549},{"_id":"themes/3-hexo/README.md","hash":"d2c42534ceabcb7cd2e58ed994bf7d6f734d1f3b","modified":1655730678550},{"_id":"themes/3-hexo/_config.yml","hash":"65532d325b0ab28addbedd133edfaf8a2b68f9cb","modified":1655731363592},{"_id":"themes/3-hexo/languages/en.yml","hash":"53ae29ae1237fc7822df85a6d2f8da6f0078625e","modified":1655730678552},{"_id":"themes/3-hexo/languages/zh-CN.yml","hash":"d2c6d86fe2ff03e6ee9bbc16dff8efe5b47ac297","modified":1655730678553},{"_id":"themes/3-hexo/layout/index.ejs","hash":"27ea3dac053d501b79bbef5117b4f3aff063d8cd","modified":1655730678565},{"_id":"themes/3-hexo/layout/indexs.md","hash":"1b352287869e33d9ee55233b33288fb55034d78c","modified":1655730678566},{"_id":"themes/3-hexo/layout/post.ejs","hash":"4abd16c0f5e3f51103d23b73710d695dc7fdc5d2","modified":1655730678566},{"_id":"themes/3-hexo/source/.DS_Store","hash":"fdcc907c46e093a14b153c5dc8c038461997ed3c","modified":1655730678567},{"_id":"themes/3-hexo/layout/_partial/article.ejs","hash":"516844c4a0e13d6773f6029849f51c59613b6f69","modified":1655730678554},{"_id":"themes/3-hexo/layout/_partial/article_copyright.ejs","hash":"0ebb17d001cb7bb7606c616c380049a2e7124496","modified":1655730678554},{"_id":"themes/3-hexo/layout/_partial/comment.ejs","hash":"5507b4dfab2032345e012a0c5356f63b01395157","modified":1655730678555},{"_id":"themes/3-hexo/layout/_partial/copyright.ejs","hash":"f66939a8c9d5258948b47842b8b4495e6ec45988","modified":1655730678559},{"_id":"themes/3-hexo/layout/_partial/dashang.ejs","hash":"bc94eee27701b67d238f328737b578e8270989eb","modified":1655730678560},{"_id":"themes/3-hexo/layout/_partial/friends.ejs","hash":"d11092791e5c140ff81f2aefa0d1b051f403239d","modified":1655730678561},{"_id":"themes/3-hexo/layout/_partial/footer.ejs","hash":"ed479aa9affee3b02a76da06de45a7c40a97a706","modified":1655730678560},{"_id":"themes/3-hexo/layout/_partial/full-toc.ejs","hash":"a734c26d86da6697003ed27672c1b9b82b216c82","modified":1655730678561},{"_id":"themes/3-hexo/layout/_partial/header.ejs","hash":"d0b84370ca81c3baa02a05613ff040003acd2985","modified":1655730678562},{"_id":"themes/3-hexo/layout/_partial/mathjax.ejs","hash":"c2e5cef2377884cd79e5f686fe4f74b082744306","modified":1655730678562},{"_id":"themes/3-hexo/layout/_partial/nav-left.ejs","hash":"0e7de3e614ca49fe1c7420f233bea22e02641272","modified":1655730678563},{"_id":"themes/3-hexo/layout/_partial/meta.ejs","hash":"8a9e93f9cbe80763264018290da0b14b4bbe8ac5","modified":1655730678562},{"_id":"themes/3-hexo/layout/_partial/nav-right.ejs","hash":"295f5d00a69c434d63db6e4576535ac5b4c26eac","modified":1655730678563},{"_id":"themes/3-hexo/layout/_partial/tag.ejs","hash":"3cf8ba0c6112dfa8089603b8df3e31f70a272715","modified":1655730678564},{"_id":"themes/3-hexo/layout/_partial/toc-ref.ejs","hash":"6406251dabda66ef686d4c15edbc3061b6d828b8","modified":1655730678564},{"_id":"themes/3-hexo/source/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1655730678579},{"_id":"themes/3-hexo/source/css/mobile.styl","hash":"59a4abd36cc8ff2107f1fcb3c0fe48d0492c9030","modified":1655730678589},{"_id":"themes/3-hexo/source/css/style.styl","hash":"7090b81f34e26172670c68da6a366ca186523779","modified":1655730678589},{"_id":"themes/3-hexo/source/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1655730678591},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1655730678591},{"_id":"themes/3-hexo/source/img/avatar.jpg","hash":"a42360089bfa892d803cf5747eab359d90f337f1","modified":1655730678592},{"_id":"themes/3-hexo/source/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1655730678593},{"_id":"themes/3-hexo/source/img/gov.png","hash":"f31c9f47faedf7f33b9580d6284ab891fb697560","modified":1655730678593},{"_id":"themes/3-hexo/source/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1655730678594},{"_id":"themes/3-hexo/source/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1655730678601},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1655730678602},{"_id":"themes/3-hexo/source/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1655730678603},{"_id":"themes/3-hexo/source/js/script.js","hash":"f261fb46d822e9b89296c454a965ff34e4b244f9","modified":1655730678603},{"_id":"themes/3-hexo/source/js/titleTip.js","hash":"81dca549063e29ba3a4a278f0f4388eba8a2167b","modified":1655730678604},{"_id":"themes/3-hexo/layout/_partial/comments/click2show.ejs","hash":"fa6675230f8c313236604e26926b142f4f418bdd","modified":1655730678556},{"_id":"themes/3-hexo/layout/_partial/comments/disqus.ejs","hash":"cd0022ce7e6d6efb07a00e87477cdf791f7f6703","modified":1655730678556},{"_id":"themes/3-hexo/layout/_partial/comments/gitalk.ejs","hash":"fbd3c7d72c8354d700918390c6cbfc0a11408277","modified":1655730678557},{"_id":"themes/3-hexo/layout/_partial/comments/gitment.ejs","hash":"f16442568b43d034faaa8e3507f5ae8da34c7b72","modified":1655730678557},{"_id":"themes/3-hexo/layout/_partial/comments/livere.ejs","hash":"e820aa16b5ed4e024616b5e2d424925820d43e56","modified":1655730678558},{"_id":"themes/3-hexo/layout/_partial/comments/utteranc.ejs","hash":"c76773b96860940083baf16470b7b80ac098e645","modified":1655730678559},{"_id":"themes/3-hexo/source/css/_partial/comment.styl","hash":"2a9b5ffb759be85545a89f6d1194579a800f51a5","modified":1655730678568},{"_id":"themes/3-hexo/source/css/_partial/dashang.styl","hash":"f6447a2ac407228e1d53e3455db2919ac0e9f094","modified":1655730678569},{"_id":"themes/3-hexo/source/css/_partial/fade.styl","hash":"4f687cbc74caf8a0887f5e89250284a9bce8b5c1","modified":1655730678569},{"_id":"themes/3-hexo/source/css/_partial/font.styl","hash":"c68d6942ed62f9cce8a9042f5a59055a0ee5441c","modified":1655730678570},{"_id":"themes/3-hexo/source/css/_partial/full-toc.styl","hash":"0143711c1221cb4e70a3db866754d79c8a81d253","modified":1655730678570},{"_id":"themes/3-hexo/source/css/_partial/nav-left.styl","hash":"0f80414f4c663c5250c8ff41d01ce6c68450ee33","modified":1655730678571},{"_id":"themes/3-hexo/source/css/_partial/nav-right.styl","hash":"44bdb1fe3e75996f24f2656770d6a376330e898d","modified":1655730678571},{"_id":"themes/3-hexo/source/css/_partial/nprogress.styl","hash":"65efbddd23a264e7d1e85f4073228526770e833c","modified":1655730678572},{"_id":"themes/3-hexo/source/css/_partial/num-load.styl","hash":"4b996440bba8ec755aa70bc6d074d7dbba55ec0c","modified":1655730678572},{"_id":"themes/3-hexo/source/css/_partial/post.styl","hash":"0dd8d208081b92e05d6db3361743c520a2816828","modified":1655730678573},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1655730678573},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1655730678574},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1655730678574},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1655730678575},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","hash":"b14b8624988ff069aff3145f88c0d7ac49052bd3","modified":1655730678575},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","hash":"13974fe35fca836e870a960ecb11b7eca2e036f8","modified":1655730678576},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","hash":"140829ecf12d30c6e18d8dc6dc0c188a66addd25","modified":1655730678577},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","hash":"0d2d4559f1ac4fa801eb8cc099fa5bf9dcf955ef","modified":1655730678578},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff2","hash":"b0317a0b2ebb1181a8bf5a97d03556dd54538645","modified":1655730678578},{"_id":"themes/3-hexo/source/css/fonts/selection.json","hash":"57c7f100019d57b512aab509185cb0a6eb9aa4c8","modified":1655730678579},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","hash":"f3eb4e5feda9cbd6242ccf44ca064e2979b5d719","modified":1655730678580},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","hash":"03af387edcc1cf8c18d12e9c440fd51b6cf425b6","modified":1655730678581},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","hash":"553987211d3323a7dfc0b08786b183a3435978c9","modified":1655730678580},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","hash":"2bfc14f27ccca108b4b3755782de8366e8bd001e","modified":1655730678582},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","hash":"53276ff1f224f691dfe811e82c0af7f4476abf5d","modified":1655730678583},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","hash":"5e05b19832c1099bd9d284bc3ed00dc8a3d7ee23","modified":1655730678582},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","hash":"315ad610d303caba9eac80a7d51002193a15478a","modified":1655730678584},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","hash":"1bece084b1dbbbd4af064f05feffd8c332b96a48","modified":1655730678584},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","hash":"e9c190f9ffc37a13cac430512e4e0c760205be4a","modified":1655730678585},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","hash":"a6e8cfd2202afd7893f5268f3437421e35066e7b","modified":1655730678586},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","hash":"0c3ccd0d64e7504c7061d246dc32737f502f64e4","modified":1655730678585},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","hash":"e5c37646a9d9c1094f9aab7a7c65a4b242e8db00","modified":1655730678586},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","hash":"51659351b391a2be5c68728bb51b7ad467c5e0db","modified":1655730678587},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","hash":"501d75ef0f4385bea24d9b9b4cc434ba68d4be27","modified":1655730678588},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","hash":"2aa9817e68fb2ed216781ea04b733039ebe18214","modified":1655730678588},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1655730678588},{"_id":"themes/3-hexo/source/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1655730678595},{"_id":"themes/3-hexo/source/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1655730678600},{"_id":"themes/3-hexo/source/js/gitalk.js","hash":"26ba4841dcb4b178f730f53a8d1f4a7c89442b4f","modified":1655730678598},{"_id":"themes/kaze/.deepsource.toml","hash":"d562cc92fdbdcf5ef6494d9d589c1d458be9447b","modified":1655966523439},{"_id":"themes/kaze/.eslintrc.json","hash":"5826fc1d26f8e1327d6ce733c1dcfdd363e455d3","modified":1655966523439},{"_id":"themes/kaze/.gitignore","hash":"e8e704101761eae82558c166a3e8a5b53e778a5c","modified":1655966523439},{"_id":"themes/kaze/LICENSE","hash":"84c87e78e9781eb1c63f74f7f95abdf0c2a13195","modified":1655966523439},{"_id":"themes/kaze/README.md","hash":"f15a74294a7055643594983073f5f9a7ee958180","modified":1655966523440},{"_id":"themes/kaze/README_zh.md","hash":"0bb0de17cb25e5fa813f287400fc844a66e5278f","modified":1655966523440},{"_id":"themes/kaze/_config.yml","hash":"af6de4026ad4da4e89e825e863cef4a31f246bb2","modified":1655966523440},{"_id":"themes/kaze/gulpfile.js","hash":"f1f916f47ce9725557a63495cfc0b7942e3bb287","modified":1655966523440},{"_id":"themes/kaze/index.js","hash":"805e996076a6f9d70a77a2e6203f731535fb6912","modified":1655966523441},{"_id":"themes/kaze/package.json","hash":"f544eecd06020aa26b36148c9dd856c73ee87dd0","modified":1655731613511},{"_id":"themes/kaze/languages/en.yml","hash":"86bb06af11e288b75421cc96ff66a9c52ddbead8","modified":1655966523441},{"_id":"themes/kaze/languages/zh-CN.yml","hash":"1d65eb3e4251f3b24c20ae4e6cbc5d56a695a8ed","modified":1655966523441},{"_id":"themes/kaze/languages/zh-TW.yml","hash":"76c6f2f284f9e875a6d53e97c90c933bb7f49c8d","modified":1655966523441},{"_id":"themes/kaze/layout/archive.ejs","hash":"95f014451d1045df3dfbfe82de255152916bc404","modified":1655966523445},{"_id":"themes/kaze/layout/artitalk.ejs","hash":"b732a3bf354231d5fcb19b69e1dd66b8b8bb33a7","modified":1655731613504},{"_id":"themes/kaze/layout/about.ejs","hash":"06bbaacfedfea63867a5937beb6e09a295763375","modified":1655966523445},{"_id":"themes/kaze/layout/categories.ejs","hash":"e1f3e2641c4305656df9465ee6f9fde93a596dc5","modified":1655966523445},{"_id":"themes/kaze/layout/category.ejs","hash":"5add5abe99875c0b46125cbbbed576a351915cf3","modified":1655966523445},{"_id":"themes/kaze/layout/layout.ejs","hash":"f0d09b15b25afa937f05d2fd4a6cc12d5f02c1fe","modified":1655731613506},{"_id":"themes/kaze/layout/index.ejs","hash":"065ee8a03c816686a210d731d7b5473afb57388f","modified":1655731613506},{"_id":"themes/kaze/layout/links.ejs","hash":"c8ba5cba5c34bd87f088c582c30ab988f5598e37","modified":1655966523446},{"_id":"themes/kaze/layout/post.ejs","hash":"4eaca2d87b651371a703139c0172967e2a3628c4","modified":1655966523446},{"_id":"themes/kaze/layout/tag.ejs","hash":"de2f0ab78d4272982e4ad945609a1f2a6acac8f4","modified":1655966523446},{"_id":"themes/kaze/layout/tags.ejs","hash":"5978626693a28a8d8992f00327732da6e1ad9bcc","modified":1655966523446},{"_id":"themes/kaze/lib/lazyload.js","hash":"ed8d0995e204ca03169e227039b849b30c3a8a63","modified":1655966523447},{"_id":"themes/kaze/scripts/index.js","hash":"e22ebdc3794fec7a8ce07be943b72e4eebb6a303","modified":1655966523448},{"_id":"themes/kaze/lib/mergeConfig.js","hash":"6f300970424a6cb3823311bb7fb60b2f12bfdf0c","modified":1655966523447},{"_id":"themes/kaze/.github/ISSUE_TEMPLATE/bug-report-----.md","hash":"9543eeaed79c837751acf800da1116156a7d4335","modified":1655731613486},{"_id":"themes/kaze/.github/ISSUE_TEMPLATE/feature-request-----.md","hash":"f283e5b2f9b92e468a359c0974339e3569b1ac8c","modified":1655731613487},{"_id":"themes/kaze/.github/workflows/beta.yml","hash":"e02e7f4995bd1778ebe0dd92e0cf8a03173a8651","modified":1655731613488},{"_id":"themes/kaze/.github/workflows/release.yml","hash":"ac436597c6831e9d346aeb9e5cf54b7ec6476aba","modified":1655731613488},{"_id":"themes/kaze/layout/_partial/archives.ejs","hash":"4e2037d0cbc1ca0f4830e25a784794604d1279a3","modified":1655966523441},{"_id":"themes/kaze/layout/_partial/author.ejs","hash":"fbedae957b0c31a6d27a365394621b80184aaf61","modified":1655966523442},{"_id":"themes/kaze/layout/_partial/categories.ejs","hash":"462c3ee01edfa8725ccc99bddafd0dc82f1cbfc5","modified":1655966523442},{"_id":"themes/kaze/layout/_partial/footer.ejs","hash":"d7907330ee4d4d4a60ab31343381b65ea5103b6c","modified":1655966523442},{"_id":"themes/kaze/layout/_partial/head.ejs","hash":"537117a906bf2ad339faaeaccf71e0d068947271","modified":1655731613496},{"_id":"themes/kaze/layout/_partial/nav.ejs","hash":"7633ccfcaa300ea336e9184fb1465471743d694b","modified":1655966523443},{"_id":"themes/kaze/layout/_partial/left-aside.ejs","hash":"55a9f75b77f7686e86df551c7db32affd4fb0834","modified":1655966523442},{"_id":"themes/kaze/layout/_partial/pagination.ejs","hash":"8c6c3a86ad42553831fd94c716e55b402987ac5a","modified":1655966523443},{"_id":"themes/kaze/layout/_partial/recent-post.ejs","hash":"d1b88c4ed9629d579bd6ef76f95b823d87ce0233","modified":1655966523444},{"_id":"themes/kaze/layout/_partial/right-aside.ejs","hash":"4132e897ad2e08815e7465882f37e09debe6dabb","modified":1655966523444},{"_id":"themes/kaze/layout/_partial/scrollbutton.ejs","hash":"d8bd8cf564f716ff5db5abd382f821b9581dda13","modified":1655966523444},{"_id":"themes/kaze/layout/_partial/tags.ejs","hash":"38112e194ec9bd2855ace95274f331255c52f843","modified":1655966523444},{"_id":"themes/kaze/lib/minify/minifyCSS.js","hash":"f3c3ac264a6b788353483f5077b137b51da9a4f2","modified":1655966523447},{"_id":"themes/kaze/layout/_partial/toc-card.ejs","hash":"6d14483899e8101194d2b34782cb036eed568aa8","modified":1655966523444},{"_id":"themes/kaze/lib/minify/minifyHTML.js","hash":"df06caff1eef4c6d8035786ba760aeb1d76750fc","modified":1655966523447},{"_id":"themes/kaze/lib/minify/minifyJS.js","hash":"cb5d417447e7aaf8c78fa0f7b408659d86d5eca6","modified":1655966523447},{"_id":"themes/kaze/scripts/generators/pagerouter.js","hash":"f86551dbe588a297ccc744249ac1a69ac82e047f","modified":1655966523447},{"_id":"themes/kaze/scripts/generators/search.js","hash":"c336bcd252be642f7f3a6a2ec2c75bbc9067f610","modified":1655966523448},{"_id":"themes/kaze/scripts/helpers/count.js","hash":"a2ecc582e9f4489726bb9668b51b682f8129e30e","modified":1655731613513},{"_id":"themes/kaze/scripts/helpers/load.js","hash":"0c87cc180b8f4612f3fb23933bbcbc47223be435","modified":1655966523448},{"_id":"themes/kaze/scripts/highlight/replace.js","hash":"38879d7e4bafd016a0a3cd86df65233eb2d0f92e","modified":1655731613514},{"_id":"themes/kaze/scripts/tag/note.js","hash":"2cfa3b68b30f53480a7657174e6d662feb850526","modified":1655966523448},{"_id":"themes/kaze/source/css/main.styl","hash":"8b602110e32636076754d9e26555f4c924dfa8bb","modified":1655731613533},{"_id":"themes/kaze/source/js/main.js","hash":"831bc942def50f6c23fa45043c940fd43161c648","modified":1655966523461},{"_id":"themes/kaze/src/scripts/console.ts","hash":"fb1272491d5f211469f531536c708a5cecebd82f","modified":1655966523461},{"_id":"themes/kaze/src/scripts/darkMode.ts","hash":"f9eda2794effec0af2a2ebd6588bca70e97caead","modified":1655966523461},{"_id":"themes/kaze/src/scripts/index.d.ts","hash":"f257b1abca545c0debd3925d9f4dfeb1c1a371d6","modified":1655966523462},{"_id":"themes/kaze/src/scripts/main.ts","hash":"06881ee55d3c12d47401934f9b8a3ea29df168a4","modified":1655966523462},{"_id":"themes/kaze/src/scripts/menuButton.ts","hash":"87dfe7069e11b72e84f6b7583656b7f229f86dbc","modified":1655966523462},{"_id":"themes/kaze/src/scripts/popButton.ts","hash":"55c819665e573def9496ff881dfb467eee5be1e4","modified":1655966523462},{"_id":"themes/kaze/src/scripts/rollup.config.js","hash":"5b172c73b324a3e35efcf94063331ac2a2f47a6b","modified":1655966523462},{"_id":"themes/kaze/src/scripts/scrollUp.ts","hash":"4db7c436ba93ec10acf3ecf7b67f3ebc8dae7a5a","modified":1655966523463},{"_id":"themes/kaze/src/scripts/search.ts","hash":"22977bc90603643e89fec560ca2c8da52415dd6f","modified":1655966523463},{"_id":"themes/kaze/src/scripts/tsconfig.json","hash":"ba07b3d567bfab7b4fcccc0efcfe72e3917dc0d7","modified":1655966523463},{"_id":"themes/kaze/layout/_partial/plugins/latex.ejs","hash":"642795cb714e753795c0402798cbb67f6ad76426","modified":1655966523444},{"_id":"themes/kaze/layout/_partial/plugins/lightbox.ejs","hash":"9a2c363ab54d64a1c9d0fc0cd1652e029013047c","modified":1655966523444},{"_id":"themes/kaze/source/css/_base/color.styl","hash":"c217c874ebf704cae31cef9787c7330e4d7d67f0","modified":1655966523449},{"_id":"themes/kaze/source/css/_base/highlight.styl","hash":"466974079c5f2cedc89e5ffa65b79beefe1d521b","modified":1655731613517},{"_id":"themes/kaze/source/css/_base/index.styl","hash":"c5eb9ee07af5825d919504fd55acaf7c74f92edc","modified":1655731613517},{"_id":"themes/kaze/source/css/_base/reset.styl","hash":"87dfbf9add559fa20ac922e73db9077c43dac180","modified":1655966523449},{"_id":"themes/kaze/source/css/_pages/about.styl","hash":"26612eb1561c5aa2c14322546c22ff3cc210903a","modified":1655966523450},{"_id":"themes/kaze/source/css/_pages/archives.styl","hash":"af3ce4bd66908822a194b57db497aefd2020b187","modified":1655966523450},{"_id":"themes/kaze/source/css/_pages/categories.styl","hash":"7f4b6f9f25e2bb00196c84de4827dc1fd2138aa9","modified":1655966523450},{"_id":"themes/kaze/source/css/_pages/index.styl","hash":"26f96b71c3399a0091d9a3eeb013d113834c6de2","modified":1655966523451},{"_id":"themes/kaze/source/css/_pages/rewrite.styl","hash":"00f3b9899d89058da78ed63ed7e7e02476074ac7","modified":1655966523451},{"_id":"themes/kaze/source/css/_pages/tags.styl","hash":"ecf086869ac2b3a7c8ac35259c67bce7491c8850","modified":1655966523452},{"_id":"themes/kaze/source/css/_mixins/index.styl","hash":"f39e33c0d5b45e3c737207f7eb187a406d444ea8","modified":1655966523449},{"_id":"themes/kaze/source/css/_variables/index.styl","hash":"79e9e1423705a8a28fb902eaa634beebbcb0a353","modified":1655966523455},{"_id":"themes/kaze/source/js/lib/busuanzi.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1655731613534},{"_id":"themes/kaze/source/js/lib/lozad.min.js","hash":"2230059353a889fb3b6c7746030a7f3267fb4568","modified":1655966523459},{"_id":"themes/kaze/source/js/lib/md5.min.js","hash":"aed768f6bf5e3518a403452cb400b098fe4eb629","modified":1655966523459},{"_id":"themes/kaze/layout/_partial/plugins/comments/gitalk.ejs","hash":"1df54c8518b7c877ca1fd23bdac956935502edbc","modified":1655966523443},{"_id":"themes/kaze/layout/_partial/plugins/comments/livere.ejs","hash":"433f78a6bcdb944050868f33a2e326511bdd3f09","modified":1655966523443},{"_id":"themes/kaze/layout/_partial/plugins/comments/valine.ejs","hash":"e60f4ecbfff3b97ef093e3d241635aa877921e40","modified":1655966523443},{"_id":"themes/kaze/source/css/_pages/widgets/author.styl","hash":"6848bd92a6cff575a5052fd461728e91ed381dbb","modified":1655966523452},{"_id":"themes/kaze/layout/_partial/plugins/comments/waline.ejs","hash":"c6b6cc91f33363740da2972b9ca2d7e5f16fd4aa","modified":1655966523444},{"_id":"themes/kaze/source/css/_pages/widgets/archive.styl","hash":"2f10c1c6da71c04b0232657dc6d6f30bd0b3036d","modified":1655966523452},{"_id":"themes/kaze/source/css/_pages/widgets/button.styl","hash":"0cf7036ab2be25adc99b2ebb4a9f1bae492c278a","modified":1655966523452},{"_id":"themes/kaze/source/css/_pages/widgets/card.styl","hash":"db2b18162ce44bce7b7a6ef4a9c6a0d47ff4003e","modified":1655731613524},{"_id":"themes/kaze/source/css/_pages/widgets/categories.styl","hash":"fe591767011d599d28721ff5659ccf2a90e26581","modified":1655966523453},{"_id":"themes/kaze/source/css/_pages/widgets/columns.styl","hash":"0dce9e38b8ee4a3aae49b2b978859b01f132bf5f","modified":1655731613525},{"_id":"themes/kaze/source/css/_pages/widgets/container.styl","hash":"b62f9beb50f9bc6272b3b8bda0eff3eb049a31a2","modified":1655966523453},{"_id":"themes/kaze/source/css/_pages/widgets/footer.styl","hash":"30fa2c37da0c064118b3d7a654d3a0cbcbcb0683","modified":1655966523453},{"_id":"themes/kaze/source/css/_pages/widgets/friends.styl","hash":"6b83489ce541c190943148276bff06b783d79d02","modified":1655966523454},{"_id":"themes/kaze/source/css/_pages/widgets/nav.styl","hash":"8569520045fea9e9769ef75cb404ef16d77e3085","modified":1655966523454},{"_id":"themes/kaze/source/css/_pages/widgets/pagination.styl","hash":"87787a0ac9863dc2ef4647e665dc7723116af9c6","modified":1655731613528},{"_id":"themes/kaze/source/css/_pages/widgets/post.styl","hash":"fdb9b1c4163746a0858f7a60c59531dc0b6c4a1f","modified":1655731613528},{"_id":"themes/kaze/source/css/_pages/widgets/postlist.styl","hash":"8dd8f1c8e10f28f7895635f26d7269b01f7f60d5","modified":1655731613529},{"_id":"themes/kaze/source/css/_pages/widgets/recentposts.styl","hash":"694b653ce2c9dff023382468df2c3fecb89a9e03","modified":1655966523454},{"_id":"themes/kaze/source/css/_pages/widgets/search.styl","hash":"56713141669b5fc5a341ce625d67e3be60822ba3","modified":1655966523454},{"_id":"themes/kaze/source/css/_pages/widgets/section.styl","hash":"708375feb91a99dd4dd6be07422991c7aaa74813","modified":1655966523455},{"_id":"themes/kaze/source/css/_pages/widgets/tags.styl","hash":"8e28ad889a39547722ccd39aceab6bdf674657a4","modified":1655966523455},{"_id":"themes/kaze/source/css/_pages/widgets/toc.styl","hash":"4af392d4097e9ac649686134237c7bc46a3006f5","modified":1655966523455},{"_id":"themes/kaze/source/js/lib/lightbox/baguetteBox.min.css","hash":"3898827bc70ad71257f992ad1db7af29c391613d","modified":1655966523459},{"_id":"themes/kaze/source/js/lib/lightbox/baguetteBox.min.js","hash":"24c5e555525ee9d41e6e48a14954d03bd689a9aa","modified":1655966523459},{"_id":"themes/kaze/source/js/lib/prism/prism-dark.min.css","hash":"e13ef6cdba90cb700e894ceff4584e95bd60de4c","modified":1655966523460},{"_id":"themes/kaze/source/js/lib/prism/prism-coy.min.css","hash":"24a435be86a12adf78fc448aa52f6fb7b635eb04","modified":1655966523460},{"_id":"themes/kaze/source/js/lib/prism/prism-funky.min.css","hash":"c7bca25425490b9465bd546b2d08f28094dc25ee","modified":1655966523460},{"_id":"themes/kaze/source/js/lib/prism/prism-line-numbers.min.css","hash":"b8d1a09efe704ebd1854c894f49b573721b7427d","modified":1655966523460},{"_id":"themes/kaze/source/js/lib/prism/prism-okaidia.min.css","hash":"641ab0b006056b1182d4deb958a340033094f7ca","modified":1655966523460},{"_id":"themes/kaze/source/js/lib/prism/prism-solarizedlight.min.css","hash":"cf3751130cc2c473d8b6535b5eea7799373875b0","modified":1655966523460},{"_id":"themes/kaze/source/js/lib/prism/prism-tomorrow.min.css","hash":"9ae9c010592228f0913714d2406420ab9d4dc7b4","modified":1655966523461},{"_id":"themes/kaze/source/js/lib/prism/prism-twilight.min.css","hash":"402395b16aacc61cd76002ca1eea02d101c98380","modified":1655966523461},{"_id":"themes/kaze/source/js/lib/prism/prism.min.css","hash":"aa3607158053897633d6cf9247b64a1df8f13ec3","modified":1655966523461},{"_id":"themes/kaze/source/img/ruby.png","hash":"8f38f433cd7a25680f13c2edbba9aa10d0322294","modified":1655731929619},{"_id":"source/about/index.md","hash":"04394b9aa7428fcf655ea00e4962c169b48172dc","modified":1655966523439},{"_id":"themes/kaze/source/img/cirno.png","hash":"8e2823ea92b11dc7ca77fea411b58eb9739af9b5","modified":1655732567225},{"_id":"public/about/index.html","hash":"4762e4f68b079265d769f0f9c70c2c3fee571065","modified":1656067092499},{"_id":"public/2022/06/20/hello-world/index.html","hash":"cf98c5bb848843e8efdafaa3aad94df57e2ff834","modified":1655734483387},{"_id":"public/archives/index.html","hash":"7be9406cde6887d0bacbed37c01238fa3e35908f","modified":1656067092499},{"_id":"public/archives/2022/index.html","hash":"d5680cf18a1ff38d84de0fe9cda74bb32d876d96","modified":1656067092499},{"_id":"public/archives/2022/06/index.html","hash":"e4cd9a6ad02275340556edea9b41f467baffba7a","modified":1656067092499},{"_id":"public/index.html","hash":"0c051afe5e3aaf727154547e4adf5142b4a8688a","modified":1656067092499},{"_id":"public/categories/index.html","hash":"0cf91e508bd097892f3fefd88e24b6bbc3d9b8c3","modified":1656067092499},{"_id":"public/tags/index.html","hash":"2ca54d59179ebb36fafaf0a39604c7818cbdc2a1","modified":1656067092499},{"_id":"public/links/index.html","hash":"c6021787e4ac89813153a874427391bcdadc8c7d","modified":1656067092499},{"_id":"public/img/ruby.png","hash":"8f38f433cd7a25680f13c2edbba9aa10d0322294","modified":1655733416721},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1655733416721},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1655733416721},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1655733416721},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1655733416721},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1655733416721},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1655733416721},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1655733416721},{"_id":"public/js/main.js","hash":"af2857830858fc387588bafa19d8c301af9f4cc4","modified":1655733416721},{"_id":"public/js/lib/lozad.min.js","hash":"31d6033296c6e6ebff829ab29d171bac3177280d","modified":1655733416721},{"_id":"public/js/lib/lightbox/baguetteBox.min.css","hash":"4daa164702723f5206591005151dc89f58eab559","modified":1655733416721},{"_id":"public/js/lib/lightbox/baguetteBox.min.js","hash":"300d6a58c385a454ac7f6b271e210ab59f54796c","modified":1655733416721},{"_id":"public/js/lib/busuanzi.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1655733416721},{"_id":"public/js/lib/md5.min.js","hash":"ab074f76aa161e2851e19733d802a66c9a242387","modified":1655733416721},{"_id":"public/js/lib/prism/prism-dark.min.css","hash":"99ad7013f4e2cb94d6858f1d338ce24976722e16","modified":1655733416721},{"_id":"public/js/lib/prism/prism-funky.min.css","hash":"1b4f667352bde11377b82f6402af9470ca7d410d","modified":1655733416721},{"_id":"public/js/lib/prism/prism-coy.min.css","hash":"de43e5d8fe8ac0e5be493fc37280a14764d224ba","modified":1655733416721},{"_id":"public/js/lib/prism/prism-line-numbers.min.css","hash":"7831e69297d5fadf91f33f63f2aeb58f0c374e6b","modified":1655733416721},{"_id":"public/js/lib/prism/prism-tomorrow.min.css","hash":"ff9820d63a78827b2798030c4734e9c752183953","modified":1655733416721},{"_id":"public/js/lib/prism/prism-solarizedlight.min.css","hash":"58ddae9f0df85468118a028e24b975848e22488c","modified":1655733416721},{"_id":"public/js/lib/prism/prism-okaidia.min.css","hash":"a611beee4ccd9bc303667159ad2977fc4fa02126","modified":1655733416721},{"_id":"public/js/lib/prism/prism.min.css","hash":"3e748cee6ef8cdaceec5335971b8d133aa9dcfa3","modified":1655733416721},{"_id":"public/js/lib/prism/prism-twilight.min.css","hash":"18a27c7ef76965a40daaab90035500a3ad7f2cbf","modified":1655733416721},{"_id":"public/css/style.css","hash":"f1b669a54c928168d56b4974aee651af82907e7f","modified":1655733416721},{"_id":"public/css/main.css","hash":"5e9ac7c138b6e510f02518e8e01366b3b74cb794","modified":1655733416721},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1655733416721},{"_id":"public/img/cirno.png","hash":"8e2823ea92b11dc7ca77fea411b58eb9739af9b5","modified":1655733416721},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1655733416721},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1655733416721},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1655733416721},{"_id":"source/_posts/church-number-in-haskell.md","hash":"2e91de43264c966acf6bc85aeac16c1567272a0e","modified":1656067047742},{"_id":"public/1970/01/01/hello-world/index.html","hash":"df0f20c07176ca1c6c642dc64cd0db222ba9428a","modified":1656067092499},{"_id":"public/categories/Type-Systems/index.html","hash":"56231460b03b1389d7c5a7338d2d02fc44738964","modified":1656067092499},{"_id":"public/archives/1970/01/index.html","hash":"23fe60363d080a7f7176d820dd36a84d562ce070","modified":1656067092499},{"_id":"public/archives/1970/index.html","hash":"8d5f6edc045079f8cc6c4acc43048720c08baf62","modified":1656067092499},{"_id":"public/tags/Haskell/index.html","hash":"f6fdf1d38b247d009aa1c053478010229960faa6","modified":1656067092499},{"_id":"public/tags/λ演算/index.html","hash":"f9e6a0da0d4dacf79cb30c1ad96cc6426ce97b13","modified":1656067092499},{"_id":"public/2022/06/24/church-number-in-haskell/index.html","hash":"3a97148bdb501d7bfdade449ee4de9e24a320197","modified":1656067092499}],"Category":[{"name":"Type Systems","_id":"cl4rxkjbd00006q3bfmn54djj"}],"Data":[],"Page":[{"title":"关于","date":"2022-06-20T13:47:13.000Z","_content":"欢迎来到现代语言实验室！你可以在这里找到一些我的笔记和分享。\n\n博客内容包括但不限于：\n- C++/C#/Scala/Haskell/也许未来还有其他语言的程序设计\n- 类型系统\n- 编译器设计\n- ……\n\n内容不定期更新。\n\n博客的名字`Kishur`取自型月世界观下的时钟塔矿石科。\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2022-06-20 21:47:13\n---\n欢迎来到现代语言实验室！你可以在这里找到一些我的笔记和分享。\n\n博客内容包括但不限于：\n- C++/C#/Scala/Haskell/也许未来还有其他语言的程序设计\n- 类型系统\n- 编译器设计\n- ……\n\n内容不定期更新。\n\n博客的名字`Kishur`取自型月世界观下的时钟塔矿石科。\n","updated":"2022-06-23T06:42:03.439Z","path":"about/index.html","_id":"cl4mskzti0000y4cqfp685wo7","comments":1,"layout":"page","content":"<p>欢迎来到现代语言实验室！你可以在这里找到一些我的笔记和分享。</p>\n<p>博客内容包括但不限于：</p>\n<ul>\n<li>C++&#x2F;C#&#x2F;Scala&#x2F;Haskell&#x2F;也许未来还有其他语言的程序设计</li>\n<li>类型系统</li>\n<li>编译器设计</li>\n<li>……</li>\n</ul>\n<p>内容不定期更新。</p>\n<p>博客的名字<code>Kishur</code>取自型月世界观下的时钟塔矿石科。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>欢迎来到现代语言实验室！你可以在这里找到一些我的笔记和分享。</p>\n<p>博客内容包括但不限于：</p>\n<ul>\n<li>C++&#x2F;C#&#x2F;Scala&#x2F;Haskell&#x2F;也许未来还有其他语言的程序设计</li>\n<li>类型系统</li>\n<li>编译器设计</li>\n<li>……</li>\n</ul>\n<p>内容不定期更新。</p>\n<p>博客的名字<code>Kishur</code>取自型月世界观下的时钟塔矿石科。</p>\n"}],"Post":[{"title":"Hello World","_content":"欢迎来到现代语言实验室！你可以在这里找到一些我的笔记和分享。\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\n欢迎来到现代语言实验室！你可以在这里找到一些我的笔记和分享。\n","slug":"hello-world","published":1,"date":"1970-01-01T00:00:00.000Z","updated":"2022-06-23T06:42:03.439Z","_id":"cl4mrc7nn0000u4cqfx9j64f7","comments":1,"layout":"post","photos":[],"link":"","content":"<p>欢迎来到现代语言实验室！你可以在这里找到一些我的笔记和分享。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>欢迎来到现代语言实验室！你可以在这里找到一些我的笔记和分享。</p>\n"},{"title":"在Hasekll中构造丘奇数及其运算","date":"2022-06-24T03:59:14.000Z","_content":"## 0.布尔运算\n### 0.0 true, false和if\n在λ演算中，两个布尔值可以这样定义：\n```haskell\ntru = \\t -> \\f -> t\nfls = \\t -> \\f -> f\n```\n\n为什么不直接构造一个`true`一个`false`解决问题呢？因为在无类型λ演算中不存在所谓的`if/else`或者`match/case`。\n因此对于传入的参数我们无法判断究竟是哪一个。这样的定义可以允许我们很直接地构造出一个`if/else`函数出来：\n\n```haskell\ntest = \\l -> \\m -> \\n -> l m n\n```\n\n如果函数值为`tru`，那么返回值就为`m`，否则为`n`。这里的`test`与`if/else`是等价的：\n\n```haskell\n*Main> test tru 2 3\n2\n*Main> test fls 4 5\n5\n```\n\n你也可以交换`\\t`和`\\f`的位置，只要确保语义正确即可。将`\\t`放在前面更容易契合`if/else`的直观感受。\n\n### 0.1 and, or, not\n有了布尔值就可以进行相应的布尔运算。首先是`and`：\n\n```haskell\nb_and = \\x -> \\y -> x y fls\n```\n\n不需要真值表，我们可以很容易地理解上面这行代码：\n- 如果左式为真，那么运算结果为右式\n- 如果左式为假，结果为假\n\n同理可以定义`or`：\n\n```haskell\nb_or = \\x -> \\y -> x tru y\n```\n\n`not`用于翻转布尔值，需要用到之前定义的`test`：\n```haskell\nb_not = \\x -> test x fls tru\n```\n\n我们可以简单地验算一下这几个式子：\n```haskell\n*Main> test (b_and tru fls) 1 0\n0\n*Main> test (b_and tru tru) 1 0\n1\n*Main> test (b_or fls fls) 1 0\n0\n*Main> test (b_not fls) 1 0\n1\n```\n\n### 0.2 pairs\n布尔值还可以用来构造`pair`。比起普通的，我们常见的`pair`（比如`std::pair`），我们需要一个额外的参数：\n```haskell\npair = \\f -> \\s -> \\b -> b f s\n```\n\n第三个参数用于决定我们需要取出哪个参数。由于函数柯里化，我们可以不急着给出第三个参数：\n```haskell\nx = pair 1 2\n```\n\n当我们需要取出某个值时，就可以这样操作：\n```haskell\nfirst = \\p -> p tru\nsecond = \\p -> p fls\n```\n\n现在我们可以得到第一个或者第二个分量：\n```haskell\n*Main> first x\n1\n*Main> second x\n2\n```\n\n## 1.丘奇数\n### 1.0 successor\n众所周知，丘奇数的定义是后继函数的调用次数。我们可以这样定义数字0、1，以及后继函数：\n```haskell\nc0 = \\s -> \\z -> z\nc1 = \\s -> \\z -> s z\nsucc = \\n -> \\s -> \\z -> s(n s z)\n```\n\n也可以直接使用`c1`来构造后继，本质上就是让`s`再多执行一次：\n```haskell\nsuc = \\n -> \\s -> \\z -> n s (c1 s z)\n```\n\n### 1.1 加、乘和幂\n所谓的加法`x+y`，就是在`y`的基础上，再执行`x`次后继运算。我们已经在`suc`函数的第二个定义中看到这个用法了：修改初始变量`z`（抽象意义上的0）为`c1`，就能实现加一的操作，那么加任意丘奇数的操作也是类似的：\n\n```haskell\nplus = \\x -> \\y -> \\s -> \\z -> x s (y s z)\n```\n\n同理，乘法`x × y`就是对`y`执行`x`次加法。如果我们可以替换掉`z`，同理我们也能够替换`s`。原先的后继每次只能加一，我们使用`plus n`作为新的后继函数：\n```haskell\ntimes = \\x -> \\y -> x (plus y) c0\n```\n\n注意这里不再需要提供`s`和`z`：`s`已经由我们所指定`plus y`，`z`也已经被`c0`所替换。前序的所有函数中，我们都没能替换`s`，而`s`的参数类型恰好是需要和`z`一致的。因此只要`s`还在，我们就无法省略`z`，即便初始变量已经被替换。\n你也可以通过`[plus y/\\t -> \\s -> \\z -> -> y s (t s z)]times`来删掉对`plus`函数的调用：\n```haskell\ntimes = \\x -> \\y -> x (\\t -> \\s -> \\z -> y s (t s z)) c0\n```\n\n幂运算需要我们将`s`替换为乘法：\n```haskell\npower = \\x -> \\y -> y (times x) c1 -- x^y\n```\n\n### 1.2 前继和减法\n众所周知，一个运算的逆运算往往比其本身要复杂得多。小学时你会认为除法比乘法更难算，就算到了大学你也认为微分比积分更简单。\n这是无可厚非的事。因此我们也在定义完所有“正向”的运算后来考虑他们的逆运算。\n\n对于前继运算来说，我们无法凭空让某次调用消失。因此需要借助`pair`来缓存一下上次运算的结果：\n```haskell\nzz = pair c0 c0\nss = \\p -> pair (second p) (suc (second p))\npre = \\m -> first (m ss zz)\n```\n\n由于丘奇数是自然数的表示形式，因此0的前继依然是0。\n\n我们尝试着依葫芦画瓢来得到减法。虽然我们的加法里没有找到对`suc`的调用，但是我们可以稍加改写：\n```haskell\nplus = \\x -> \\y -> y (suc) x\n```\n\n我们将`x`视作`z`，并在上面施加`y`次`suc`操作，这等同于之前的写法。因此减法也可以被写作：\n```haskell\nsub = \\x -> \\y -> y (pre) x\n```\n\n这段代码在Haskell中只有当减数小于等于1时才能通过编译，原因是`c2`及以后的数字类型推导为`(t -> t) -> t -> t`，而`c1: (t1 -> t2) -> t1 -> t2`，在更多次调用`s`后，所有的`t`都被约束为同一个类型的变量，这会导致编译器产生无穷类型。如果你试着像这样给`c1`指定类型，那么`c1`也将无法通过编译：\n```haskell\nc1 :: (t -> t) -> t -> t\nc1 = \\s -> \\z -> s z\n```\n\n不过我们可以人工验证算法的正确性，这里以`4 - 2`为例：\n```\nsub c4 c2\n= c2 (pre) c4\n= (\\s -> \\z -> s(s z)) (pre) c4\n= pre(pre c4)\n= pre(c3)\n= c2\n```\n\n除法和根号非常复杂，在这里我们暂时不讨论。\n\n## 2.其他函数\n### 2.0 iszero\n`iszero`判断一个数字是否为0，是的话返回`tru`，不是的话返回`fls`。一个简单的利用丘奇数性质的方法是定义一个常数函数，其永远返回`fls`，如果这个函数被调用，就说明该数字大于0：\n```haskell\niszero = \\n -> n (\\t -> fls) tru\n```\n\n### 2.1 equal\n另一个非常有用的函数是判断两个丘奇数是否相等。由于有了`iszero`，我们可以通过判断差是否为0来确定是否相等。\n注意：丘奇数没有复数，如果`x`小于`y`，`sub x y`的结果也将是0。因此，我们需要判断两次：\n```haskell\nequal = \\x -> \\y -> and (iszero(sub x y) iszero(sub y x))\n```\n\n同理，因为类型推断的问题函数无法通过编译，我们可以简单地判断一下`3 == 5`：\n```\nequal c3 c5\n= and (iszero(sub 3 5) iszero(sub 5 3))\n= and (iszero(0) iszero(2))\n= and tru fls\n= fls\n```\n\n## 参考文献\n- Pierce, B., n.d. Types and Programming Languages. London, England: The MIT Press, pp.58-65.","source":"_posts/church-number-in-haskell.md","raw":"---\ntitle: 在Hasekll中构造丘奇数及其运算\ndate: 2022-06-24 11:59:14\ncategories: Type Systems\ntags: [\"λ演算\", \"Haskell\"]\n---\n## 0.布尔运算\n### 0.0 true, false和if\n在λ演算中，两个布尔值可以这样定义：\n```haskell\ntru = \\t -> \\f -> t\nfls = \\t -> \\f -> f\n```\n\n为什么不直接构造一个`true`一个`false`解决问题呢？因为在无类型λ演算中不存在所谓的`if/else`或者`match/case`。\n因此对于传入的参数我们无法判断究竟是哪一个。这样的定义可以允许我们很直接地构造出一个`if/else`函数出来：\n\n```haskell\ntest = \\l -> \\m -> \\n -> l m n\n```\n\n如果函数值为`tru`，那么返回值就为`m`，否则为`n`。这里的`test`与`if/else`是等价的：\n\n```haskell\n*Main> test tru 2 3\n2\n*Main> test fls 4 5\n5\n```\n\n你也可以交换`\\t`和`\\f`的位置，只要确保语义正确即可。将`\\t`放在前面更容易契合`if/else`的直观感受。\n\n### 0.1 and, or, not\n有了布尔值就可以进行相应的布尔运算。首先是`and`：\n\n```haskell\nb_and = \\x -> \\y -> x y fls\n```\n\n不需要真值表，我们可以很容易地理解上面这行代码：\n- 如果左式为真，那么运算结果为右式\n- 如果左式为假，结果为假\n\n同理可以定义`or`：\n\n```haskell\nb_or = \\x -> \\y -> x tru y\n```\n\n`not`用于翻转布尔值，需要用到之前定义的`test`：\n```haskell\nb_not = \\x -> test x fls tru\n```\n\n我们可以简单地验算一下这几个式子：\n```haskell\n*Main> test (b_and tru fls) 1 0\n0\n*Main> test (b_and tru tru) 1 0\n1\n*Main> test (b_or fls fls) 1 0\n0\n*Main> test (b_not fls) 1 0\n1\n```\n\n### 0.2 pairs\n布尔值还可以用来构造`pair`。比起普通的，我们常见的`pair`（比如`std::pair`），我们需要一个额外的参数：\n```haskell\npair = \\f -> \\s -> \\b -> b f s\n```\n\n第三个参数用于决定我们需要取出哪个参数。由于函数柯里化，我们可以不急着给出第三个参数：\n```haskell\nx = pair 1 2\n```\n\n当我们需要取出某个值时，就可以这样操作：\n```haskell\nfirst = \\p -> p tru\nsecond = \\p -> p fls\n```\n\n现在我们可以得到第一个或者第二个分量：\n```haskell\n*Main> first x\n1\n*Main> second x\n2\n```\n\n## 1.丘奇数\n### 1.0 successor\n众所周知，丘奇数的定义是后继函数的调用次数。我们可以这样定义数字0、1，以及后继函数：\n```haskell\nc0 = \\s -> \\z -> z\nc1 = \\s -> \\z -> s z\nsucc = \\n -> \\s -> \\z -> s(n s z)\n```\n\n也可以直接使用`c1`来构造后继，本质上就是让`s`再多执行一次：\n```haskell\nsuc = \\n -> \\s -> \\z -> n s (c1 s z)\n```\n\n### 1.1 加、乘和幂\n所谓的加法`x+y`，就是在`y`的基础上，再执行`x`次后继运算。我们已经在`suc`函数的第二个定义中看到这个用法了：修改初始变量`z`（抽象意义上的0）为`c1`，就能实现加一的操作，那么加任意丘奇数的操作也是类似的：\n\n```haskell\nplus = \\x -> \\y -> \\s -> \\z -> x s (y s z)\n```\n\n同理，乘法`x × y`就是对`y`执行`x`次加法。如果我们可以替换掉`z`，同理我们也能够替换`s`。原先的后继每次只能加一，我们使用`plus n`作为新的后继函数：\n```haskell\ntimes = \\x -> \\y -> x (plus y) c0\n```\n\n注意这里不再需要提供`s`和`z`：`s`已经由我们所指定`plus y`，`z`也已经被`c0`所替换。前序的所有函数中，我们都没能替换`s`，而`s`的参数类型恰好是需要和`z`一致的。因此只要`s`还在，我们就无法省略`z`，即便初始变量已经被替换。\n你也可以通过`[plus y/\\t -> \\s -> \\z -> -> y s (t s z)]times`来删掉对`plus`函数的调用：\n```haskell\ntimes = \\x -> \\y -> x (\\t -> \\s -> \\z -> y s (t s z)) c0\n```\n\n幂运算需要我们将`s`替换为乘法：\n```haskell\npower = \\x -> \\y -> y (times x) c1 -- x^y\n```\n\n### 1.2 前继和减法\n众所周知，一个运算的逆运算往往比其本身要复杂得多。小学时你会认为除法比乘法更难算，就算到了大学你也认为微分比积分更简单。\n这是无可厚非的事。因此我们也在定义完所有“正向”的运算后来考虑他们的逆运算。\n\n对于前继运算来说，我们无法凭空让某次调用消失。因此需要借助`pair`来缓存一下上次运算的结果：\n```haskell\nzz = pair c0 c0\nss = \\p -> pair (second p) (suc (second p))\npre = \\m -> first (m ss zz)\n```\n\n由于丘奇数是自然数的表示形式，因此0的前继依然是0。\n\n我们尝试着依葫芦画瓢来得到减法。虽然我们的加法里没有找到对`suc`的调用，但是我们可以稍加改写：\n```haskell\nplus = \\x -> \\y -> y (suc) x\n```\n\n我们将`x`视作`z`，并在上面施加`y`次`suc`操作，这等同于之前的写法。因此减法也可以被写作：\n```haskell\nsub = \\x -> \\y -> y (pre) x\n```\n\n这段代码在Haskell中只有当减数小于等于1时才能通过编译，原因是`c2`及以后的数字类型推导为`(t -> t) -> t -> t`，而`c1: (t1 -> t2) -> t1 -> t2`，在更多次调用`s`后，所有的`t`都被约束为同一个类型的变量，这会导致编译器产生无穷类型。如果你试着像这样给`c1`指定类型，那么`c1`也将无法通过编译：\n```haskell\nc1 :: (t -> t) -> t -> t\nc1 = \\s -> \\z -> s z\n```\n\n不过我们可以人工验证算法的正确性，这里以`4 - 2`为例：\n```\nsub c4 c2\n= c2 (pre) c4\n= (\\s -> \\z -> s(s z)) (pre) c4\n= pre(pre c4)\n= pre(c3)\n= c2\n```\n\n除法和根号非常复杂，在这里我们暂时不讨论。\n\n## 2.其他函数\n### 2.0 iszero\n`iszero`判断一个数字是否为0，是的话返回`tru`，不是的话返回`fls`。一个简单的利用丘奇数性质的方法是定义一个常数函数，其永远返回`fls`，如果这个函数被调用，就说明该数字大于0：\n```haskell\niszero = \\n -> n (\\t -> fls) tru\n```\n\n### 2.1 equal\n另一个非常有用的函数是判断两个丘奇数是否相等。由于有了`iszero`，我们可以通过判断差是否为0来确定是否相等。\n注意：丘奇数没有复数，如果`x`小于`y`，`sub x y`的结果也将是0。因此，我们需要判断两次：\n```haskell\nequal = \\x -> \\y -> and (iszero(sub x y) iszero(sub y x))\n```\n\n同理，因为类型推断的问题函数无法通过编译，我们可以简单地判断一下`3 == 5`：\n```\nequal c3 c5\n= and (iszero(sub 3 5) iszero(sub 5 3))\n= and (iszero(0) iszero(2))\n= and tru fls\n= fls\n```\n\n## 参考文献\n- Pierce, B., n.d. Types and Programming Languages. London, England: The MIT Press, pp.58-65.","slug":"church-number-in-haskell","published":1,"updated":"2022-06-24T10:37:27.742Z","_id":"cl4rxi26m0000643bcx7hfbgl","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"0-布尔运算\"><a href=\"#0-布尔运算\" class=\"headerlink\" title=\"0.布尔运算\"></a>0.布尔运算</h2><h3 id=\"0-0-true-false和if\"><a href=\"#0-0-true-false和if\" class=\"headerlink\" title=\"0.0 true, false和if\"></a>0.0 true, false和if</h3><p>在λ演算中，两个布尔值可以这样定义：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">tru</span> = \\t -&gt; \\f -&gt; t</span><br><span class=\"line\"><span class=\"title\">fls</span> = \\t -&gt; \\f -&gt; f</span><br></pre>\n\n<p>为什么不直接构造一个<code>true</code>一个<code>false</code>解决问题呢？因为在无类型λ演算中不存在所谓的<code>if/else</code>或者<code>match/case</code>。<br>因此对于传入的参数我们无法判断究竟是哪一个。这样的定义可以允许我们很直接地构造出一个<code>if/else</code>函数出来：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">test</span> = \\l -&gt; \\m -&gt; \\n -&gt; l m n</span><br></pre>\n\n<p>如果函数值为<code>tru</code>，那么返回值就为<code>m</code>，否则为<code>n</code>。这里的<code>test</code>与<code>if/else</code>是等价的：</p>\n<pre class=\"highlight\"><span class=\"line\">*<span class=\"type\">Main</span>&gt; test tru <span class=\"number\">2</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\">*<span class=\"type\">Main</span>&gt; test fls <span class=\"number\">4</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">5</span></span><br></pre>\n\n<p>你也可以交换<code>\\t</code>和<code>\\f</code>的位置，只要确保语义正确即可。将<code>\\t</code>放在前面更容易契合<code>if/else</code>的直观感受。</p>\n<h3 id=\"0-1-and-or-not\"><a href=\"#0-1-and-or-not\" class=\"headerlink\" title=\"0.1 and, or, not\"></a>0.1 and, or, not</h3><p>有了布尔值就可以进行相应的布尔运算。首先是<code>and</code>：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">b_and</span> = \\x -&gt; \\y -&gt; x y fls</span><br></pre>\n\n<p>不需要真值表，我们可以很容易地理解上面这行代码：</p>\n<ul>\n<li>如果左式为真，那么运算结果为右式</li>\n<li>如果左式为假，结果为假</li>\n</ul>\n<p>同理可以定义<code>or</code>：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">b_or</span> = \\x -&gt; \\y -&gt; x tru y</span><br></pre>\n\n<p><code>not</code>用于翻转布尔值，需要用到之前定义的<code>test</code>：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">b_not</span> = \\x -&gt; test x fls tru</span><br></pre>\n\n<p>我们可以简单地验算一下这几个式子：</p>\n<pre class=\"highlight\"><span class=\"line\">*<span class=\"type\">Main</span>&gt; test (b_and tru fls) <span class=\"number\">1</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">0</span></span><br><span class=\"line\">*<span class=\"type\">Main</span>&gt; test (b_and tru tru) <span class=\"number\">1</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\">*<span class=\"type\">Main</span>&gt; test (b_or fls fls) <span class=\"number\">1</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">0</span></span><br><span class=\"line\">*<span class=\"type\">Main</span>&gt; test (b_not fls) <span class=\"number\">1</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">1</span></span><br></pre>\n\n<h3 id=\"0-2-pairs\"><a href=\"#0-2-pairs\" class=\"headerlink\" title=\"0.2 pairs\"></a>0.2 pairs</h3><p>布尔值还可以用来构造<code>pair</code>。比起普通的，我们常见的<code>pair</code>（比如<code>std::pair</code>），我们需要一个额外的参数：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">pair</span> = \\f -&gt; \\s -&gt; \\b -&gt; b f s</span><br></pre>\n\n<p>第三个参数用于决定我们需要取出哪个参数。由于函数柯里化，我们可以不急着给出第三个参数：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">x</span> = pair <span class=\"number\">1</span> <span class=\"number\">2</span></span><br></pre>\n\n<p>当我们需要取出某个值时，就可以这样操作：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">first</span> = \\p -&gt; p tru</span><br><span class=\"line\"><span class=\"title\">second</span> = \\p -&gt; p fls</span><br></pre>\n\n<p>现在我们可以得到第一个或者第二个分量：</p>\n<pre class=\"highlight\"><span class=\"line\">*<span class=\"type\">Main</span>&gt; first x</span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\">*<span class=\"type\">Main</span>&gt; second x</span><br><span class=\"line\"><span class=\"number\">2</span></span><br></pre>\n\n<h2 id=\"1-丘奇数\"><a href=\"#1-丘奇数\" class=\"headerlink\" title=\"1.丘奇数\"></a>1.丘奇数</h2><h3 id=\"1-0-successor\"><a href=\"#1-0-successor\" class=\"headerlink\" title=\"1.0 successor\"></a>1.0 successor</h3><p>众所周知，丘奇数的定义是后继函数的调用次数。我们可以这样定义数字0、1，以及后继函数：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">c0</span> = \\s -&gt; \\z -&gt; z</span><br><span class=\"line\"><span class=\"title\">c1</span> = \\s -&gt; \\z -&gt; s z</span><br><span class=\"line\"><span class=\"title\">succ</span> = \\n -&gt; \\s -&gt; \\z -&gt; s(n s z)</span><br></pre>\n\n<p>也可以直接使用<code>c1</code>来构造后继，本质上就是让<code>s</code>再多执行一次：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">suc</span> = \\n -&gt; \\s -&gt; \\z -&gt; n s (c1 s z)</span><br></pre>\n\n<h3 id=\"1-1-加、乘和幂\"><a href=\"#1-1-加、乘和幂\" class=\"headerlink\" title=\"1.1 加、乘和幂\"></a>1.1 加、乘和幂</h3><p>所谓的加法<code>x+y</code>，就是在<code>y</code>的基础上，再执行<code>x</code>次后继运算。我们已经在<code>suc</code>函数的第二个定义中看到这个用法了：修改初始变量<code>z</code>（抽象意义上的0）为<code>c1</code>，就能实现加一的操作，那么加任意丘奇数的操作也是类似的：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">plus</span> = \\x -&gt; \\y -&gt; \\s -&gt; \\z -&gt; x s (y s z)</span><br></pre>\n\n<p>同理，乘法<code>x × y</code>就是对<code>y</code>执行<code>x</code>次加法。如果我们可以替换掉<code>z</code>，同理我们也能够替换<code>s</code>。原先的后继每次只能加一，我们使用<code>plus n</code>作为新的后继函数：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">times</span> = \\x -&gt; \\y -&gt; x (plus y) c0</span><br></pre>\n\n<p>注意这里不再需要提供<code>s</code>和<code>z</code>：<code>s</code>已经由我们所指定<code>plus y</code>，<code>z</code>也已经被<code>c0</code>所替换。前序的所有函数中，我们都没能替换<code>s</code>，而<code>s</code>的参数类型恰好是需要和<code>z</code>一致的。因此只要<code>s</code>还在，我们就无法省略<code>z</code>，即便初始变量已经被替换。<br>你也可以通过<code>[plus y/\\t -&gt; \\s -&gt; \\z -&gt; -&gt; y s (t s z)]times</code>来删掉对<code>plus</code>函数的调用：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">times</span> = \\x -&gt; \\y -&gt; x (\\t -&gt; \\s -&gt; \\z -&gt; y s (t s z)) c0</span><br></pre>\n\n<p>幂运算需要我们将<code>s</code>替换为乘法：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">power</span> = \\x -&gt; \\y -&gt; y (times x) c1 <span class=\"comment\">-- x^y</span></span><br></pre>\n\n<h3 id=\"1-2-前继和减法\"><a href=\"#1-2-前继和减法\" class=\"headerlink\" title=\"1.2 前继和减法\"></a>1.2 前继和减法</h3><p>众所周知，一个运算的逆运算往往比其本身要复杂得多。小学时你会认为除法比乘法更难算，就算到了大学你也认为微分比积分更简单。<br>这是无可厚非的事。因此我们也在定义完所有“正向”的运算后来考虑他们的逆运算。</p>\n<p>对于前继运算来说，我们无法凭空让某次调用消失。因此需要借助<code>pair</code>来缓存一下上次运算的结果：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">zz</span> = pair c0 c0</span><br><span class=\"line\"><span class=\"title\">ss</span> = \\p -&gt; pair (second p) (suc (second p))</span><br><span class=\"line\"><span class=\"title\">pre</span> = \\m -&gt; first (m ss zz)</span><br></pre>\n\n<p>由于丘奇数是自然数的表示形式，因此0的前继依然是0。</p>\n<p>我们尝试着依葫芦画瓢来得到减法。虽然我们的加法里没有找到对<code>suc</code>的调用，但是我们可以稍加改写：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">plus</span> = \\x -&gt; \\y -&gt; y (suc) x</span><br></pre>\n\n<p>我们将<code>x</code>视作<code>z</code>，并在上面施加<code>y</code>次<code>suc</code>操作，这等同于之前的写法。因此减法也可以被写作：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">sub</span> = \\x -&gt; \\y -&gt; y (pre) x</span><br></pre>\n\n<p>这段代码在Haskell中只有当减数小于等于1时才能通过编译，原因是<code>c2</code>及以后的数字类型推导为<code>(t -&gt; t) -&gt; t -&gt; t</code>，而<code>c1: (t1 -&gt; t2) -&gt; t1 -&gt; t2</code>，在更多次调用<code>s</code>后，所有的<code>t</code>都被约束为同一个类型的变量，这会导致编译器产生无穷类型。如果你试着像这样给<code>c1</code>指定类型，那么<code>c1</code>也将无法通过编译：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">c1</span> :: (t -&gt; t) -&gt; t -&gt; t</span><br><span class=\"line\"><span class=\"title\">c1</span> = \\s -&gt; \\z -&gt; s z</span><br></pre>\n\n<p>不过我们可以人工验证算法的正确性，这里以<code>4 - 2</code>为例：</p>\n<pre class=\"highlight\"><span class=\"line\">sub c4 c2</span><br><span class=\"line\">= c2 (pre) c4</span><br><span class=\"line\">= (\\s -&gt; \\z -&gt; s(s z)) (pre) c4</span><br><span class=\"line\">= pre(pre c4)</span><br><span class=\"line\">= pre(c3)</span><br><span class=\"line\">= c2</span><br></pre>\n\n<p>除法和根号非常复杂，在这里我们暂时不讨论。</p>\n<h2 id=\"2-其他函数\"><a href=\"#2-其他函数\" class=\"headerlink\" title=\"2.其他函数\"></a>2.其他函数</h2><h3 id=\"2-0-iszero\"><a href=\"#2-0-iszero\" class=\"headerlink\" title=\"2.0 iszero\"></a>2.0 iszero</h3><p><code>iszero</code>判断一个数字是否为0，是的话返回<code>tru</code>，不是的话返回<code>fls</code>。一个简单的利用丘奇数性质的方法是定义一个常数函数，其永远返回<code>fls</code>，如果这个函数被调用，就说明该数字大于0：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">iszero</span> = \\n -&gt; n (\\t -&gt; fls) tru</span><br></pre>\n\n<h3 id=\"2-1-equal\"><a href=\"#2-1-equal\" class=\"headerlink\" title=\"2.1 equal\"></a>2.1 equal</h3><p>另一个非常有用的函数是判断两个丘奇数是否相等。由于有了<code>iszero</code>，我们可以通过判断差是否为0来确定是否相等。<br>注意：丘奇数没有复数，如果<code>x</code>小于<code>y</code>，<code>sub x y</code>的结果也将是0。因此，我们需要判断两次：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"title\">equal</span> = \\x -&gt; \\y -&gt; and (iszero(sub x y) iszero(sub y x))</span><br></pre>\n\n<p>同理，因为类型推断的问题函数无法通过编译，我们可以简单地判断一下<code>3 == 5</code>：</p>\n<pre class=\"highlight\"><span class=\"line\">equal c3 c5</span><br><span class=\"line\">= and (iszero(sub 3 5) iszero(sub 5 3))</span><br><span class=\"line\">= and (iszero(0) iszero(2))</span><br><span class=\"line\">= and tru fls</span><br><span class=\"line\">= fls</span><br></pre>\n\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ul>\n<li>Pierce, B., n.d. Types and Programming Languages. London, England: The MIT Press, pp.58-65.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0-布尔运算\"><a href=\"#0-布尔运算\" class=\"headerlink\" title=\"0.布尔运算\"></a>0.布尔运算</h2><h3 id=\"0-0-true-false和if\"><a href=\"#0-0-true-false和if\" class=\"headerlink\" title=\"0.0 true, false和if\"></a>0.0 true, false和if</h3><p>在λ演算中，两个布尔值可以这样定义：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">tru</span> = \\t -&gt; \\f -&gt; t</span><br><span class=\"line\"><span class=\"title\">fls</span> = \\t -&gt; \\f -&gt; f</span><br></pre></td></tr></table></figure>\n\n<p>为什么不直接构造一个<code>true</code>一个<code>false</code>解决问题呢？因为在无类型λ演算中不存在所谓的<code>if/else</code>或者<code>match/case</code>。<br>因此对于传入的参数我们无法判断究竟是哪一个。这样的定义可以允许我们很直接地构造出一个<code>if/else</code>函数出来：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">test</span> = \\l -&gt; \\m -&gt; \\n -&gt; l m n</span><br></pre></td></tr></table></figure>\n\n<p>如果函数值为<code>tru</code>，那么返回值就为<code>m</code>，否则为<code>n</code>。这里的<code>test</code>与<code>if/else</code>是等价的：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*<span class=\"type\">Main</span>&gt; test tru <span class=\"number\">2</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\">*<span class=\"type\">Main</span>&gt; test fls <span class=\"number\">4</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n\n<p>你也可以交换<code>\\t</code>和<code>\\f</code>的位置，只要确保语义正确即可。将<code>\\t</code>放在前面更容易契合<code>if/else</code>的直观感受。</p>\n<h3 id=\"0-1-and-or-not\"><a href=\"#0-1-and-or-not\" class=\"headerlink\" title=\"0.1 and, or, not\"></a>0.1 and, or, not</h3><p>有了布尔值就可以进行相应的布尔运算。首先是<code>and</code>：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">b_and</span> = \\x -&gt; \\y -&gt; x y fls</span><br></pre></td></tr></table></figure>\n\n<p>不需要真值表，我们可以很容易地理解上面这行代码：</p>\n<ul>\n<li>如果左式为真，那么运算结果为右式</li>\n<li>如果左式为假，结果为假</li>\n</ul>\n<p>同理可以定义<code>or</code>：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">b_or</span> = \\x -&gt; \\y -&gt; x tru y</span><br></pre></td></tr></table></figure>\n\n<p><code>not</code>用于翻转布尔值，需要用到之前定义的<code>test</code>：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">b_not</span> = \\x -&gt; test x fls tru</span><br></pre></td></tr></table></figure>\n\n<p>我们可以简单地验算一下这几个式子：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*<span class=\"type\">Main</span>&gt; test (b_and tru fls) <span class=\"number\">1</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">0</span></span><br><span class=\"line\">*<span class=\"type\">Main</span>&gt; test (b_and tru tru) <span class=\"number\">1</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\">*<span class=\"type\">Main</span>&gt; test (b_or fls fls) <span class=\"number\">1</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">0</span></span><br><span class=\"line\">*<span class=\"type\">Main</span>&gt; test (b_not fls) <span class=\"number\">1</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"0-2-pairs\"><a href=\"#0-2-pairs\" class=\"headerlink\" title=\"0.2 pairs\"></a>0.2 pairs</h3><p>布尔值还可以用来构造<code>pair</code>。比起普通的，我们常见的<code>pair</code>（比如<code>std::pair</code>），我们需要一个额外的参数：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">pair</span> = \\f -&gt; \\s -&gt; \\b -&gt; b f s</span><br></pre></td></tr></table></figure>\n\n<p>第三个参数用于决定我们需要取出哪个参数。由于函数柯里化，我们可以不急着给出第三个参数：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">x</span> = pair <span class=\"number\">1</span> <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<p>当我们需要取出某个值时，就可以这样操作：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">first</span> = \\p -&gt; p tru</span><br><span class=\"line\"><span class=\"title\">second</span> = \\p -&gt; p fls</span><br></pre></td></tr></table></figure>\n\n<p>现在我们可以得到第一个或者第二个分量：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*<span class=\"type\">Main</span>&gt; first x</span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\">*<span class=\"type\">Main</span>&gt; second x</span><br><span class=\"line\"><span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-丘奇数\"><a href=\"#1-丘奇数\" class=\"headerlink\" title=\"1.丘奇数\"></a>1.丘奇数</h2><h3 id=\"1-0-successor\"><a href=\"#1-0-successor\" class=\"headerlink\" title=\"1.0 successor\"></a>1.0 successor</h3><p>众所周知，丘奇数的定义是后继函数的调用次数。我们可以这样定义数字0、1，以及后继函数：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">c0</span> = \\s -&gt; \\z -&gt; z</span><br><span class=\"line\"><span class=\"title\">c1</span> = \\s -&gt; \\z -&gt; s z</span><br><span class=\"line\"><span class=\"title\">succ</span> = \\n -&gt; \\s -&gt; \\z -&gt; s(n s z)</span><br></pre></td></tr></table></figure>\n\n<p>也可以直接使用<code>c1</code>来构造后继，本质上就是让<code>s</code>再多执行一次：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">suc</span> = \\n -&gt; \\s -&gt; \\z -&gt; n s (c1 s z)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-加、乘和幂\"><a href=\"#1-1-加、乘和幂\" class=\"headerlink\" title=\"1.1 加、乘和幂\"></a>1.1 加、乘和幂</h3><p>所谓的加法<code>x+y</code>，就是在<code>y</code>的基础上，再执行<code>x</code>次后继运算。我们已经在<code>suc</code>函数的第二个定义中看到这个用法了：修改初始变量<code>z</code>（抽象意义上的0）为<code>c1</code>，就能实现加一的操作，那么加任意丘奇数的操作也是类似的：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">plus</span> = \\x -&gt; \\y -&gt; \\s -&gt; \\z -&gt; x s (y s z)</span><br></pre></td></tr></table></figure>\n\n<p>同理，乘法<code>x × y</code>就是对<code>y</code>执行<code>x</code>次加法。如果我们可以替换掉<code>z</code>，同理我们也能够替换<code>s</code>。原先的后继每次只能加一，我们使用<code>plus n</code>作为新的后继函数：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">times</span> = \\x -&gt; \\y -&gt; x (plus y) c0</span><br></pre></td></tr></table></figure>\n\n<p>注意这里不再需要提供<code>s</code>和<code>z</code>：<code>s</code>已经由我们所指定<code>plus y</code>，<code>z</code>也已经被<code>c0</code>所替换。前序的所有函数中，我们都没能替换<code>s</code>，而<code>s</code>的参数类型恰好是需要和<code>z</code>一致的。因此只要<code>s</code>还在，我们就无法省略<code>z</code>，即便初始变量已经被替换。<br>你也可以通过<code>[plus y/\\t -&gt; \\s -&gt; \\z -&gt; -&gt; y s (t s z)]times</code>来删掉对<code>plus</code>函数的调用：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">times</span> = \\x -&gt; \\y -&gt; x (\\t -&gt; \\s -&gt; \\z -&gt; y s (t s z)) c0</span><br></pre></td></tr></table></figure>\n\n<p>幂运算需要我们将<code>s</code>替换为乘法：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">power</span> = \\x -&gt; \\y -&gt; y (times x) c1 <span class=\"comment\">-- x^y</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-前继和减法\"><a href=\"#1-2-前继和减法\" class=\"headerlink\" title=\"1.2 前继和减法\"></a>1.2 前继和减法</h3><p>众所周知，一个运算的逆运算往往比其本身要复杂得多。小学时你会认为除法比乘法更难算，就算到了大学你也认为微分比积分更简单。<br>这是无可厚非的事。因此我们也在定义完所有“正向”的运算后来考虑他们的逆运算。</p>\n<p>对于前继运算来说，我们无法凭空让某次调用消失。因此需要借助<code>pair</code>来缓存一下上次运算的结果：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">zz</span> = pair c0 c0</span><br><span class=\"line\"><span class=\"title\">ss</span> = \\p -&gt; pair (second p) (suc (second p))</span><br><span class=\"line\"><span class=\"title\">pre</span> = \\m -&gt; first (m ss zz)</span><br></pre></td></tr></table></figure>\n\n<p>由于丘奇数是自然数的表示形式，因此0的前继依然是0。</p>\n<p>我们尝试着依葫芦画瓢来得到减法。虽然我们的加法里没有找到对<code>suc</code>的调用，但是我们可以稍加改写：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">plus</span> = \\x -&gt; \\y -&gt; y (suc) x</span><br></pre></td></tr></table></figure>\n\n<p>我们将<code>x</code>视作<code>z</code>，并在上面施加<code>y</code>次<code>suc</code>操作，这等同于之前的写法。因此减法也可以被写作：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">sub</span> = \\x -&gt; \\y -&gt; y (pre) x</span><br></pre></td></tr></table></figure>\n\n<p>这段代码在Haskell中只有当减数小于等于1时才能通过编译，原因是<code>c2</code>及以后的数字类型推导为<code>(t -&gt; t) -&gt; t -&gt; t</code>，而<code>c1: (t1 -&gt; t2) -&gt; t1 -&gt; t2</code>，在更多次调用<code>s</code>后，所有的<code>t</code>都被约束为同一个类型的变量，这会导致编译器产生无穷类型。如果你试着像这样给<code>c1</code>指定类型，那么<code>c1</code>也将无法通过编译：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">c1</span> :: (t -&gt; t) -&gt; t -&gt; t</span><br><span class=\"line\"><span class=\"title\">c1</span> = \\s -&gt; \\z -&gt; s z</span><br></pre></td></tr></table></figure>\n\n<p>不过我们可以人工验证算法的正确性，这里以<code>4 - 2</code>为例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sub c4 c2</span><br><span class=\"line\">= c2 (pre) c4</span><br><span class=\"line\">= (\\s -&gt; \\z -&gt; s(s z)) (pre) c4</span><br><span class=\"line\">= pre(pre c4)</span><br><span class=\"line\">= pre(c3)</span><br><span class=\"line\">= c2</span><br></pre></td></tr></table></figure>\n\n<p>除法和根号非常复杂，在这里我们暂时不讨论。</p>\n<h2 id=\"2-其他函数\"><a href=\"#2-其他函数\" class=\"headerlink\" title=\"2.其他函数\"></a>2.其他函数</h2><h3 id=\"2-0-iszero\"><a href=\"#2-0-iszero\" class=\"headerlink\" title=\"2.0 iszero\"></a>2.0 iszero</h3><p><code>iszero</code>判断一个数字是否为0，是的话返回<code>tru</code>，不是的话返回<code>fls</code>。一个简单的利用丘奇数性质的方法是定义一个常数函数，其永远返回<code>fls</code>，如果这个函数被调用，就说明该数字大于0：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">iszero</span> = \\n -&gt; n (\\t -&gt; fls) tru</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-equal\"><a href=\"#2-1-equal\" class=\"headerlink\" title=\"2.1 equal\"></a>2.1 equal</h3><p>另一个非常有用的函数是判断两个丘奇数是否相等。由于有了<code>iszero</code>，我们可以通过判断差是否为0来确定是否相等。<br>注意：丘奇数没有复数，如果<code>x</code>小于<code>y</code>，<code>sub x y</code>的结果也将是0。因此，我们需要判断两次：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">equal</span> = \\x -&gt; \\y -&gt; and (iszero(sub x y) iszero(sub y x))</span><br></pre></td></tr></table></figure>\n\n<p>同理，因为类型推断的问题函数无法通过编译，我们可以简单地判断一下<code>3 == 5</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">equal c3 c5</span><br><span class=\"line\">= and (iszero(sub 3 5) iszero(sub 5 3))</span><br><span class=\"line\">= and (iszero(0) iszero(2))</span><br><span class=\"line\">= and tru fls</span><br><span class=\"line\">= fls</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><ul>\n<li>Pierce, B., n.d. Types and Programming Languages. London, England: The MIT Press, pp.58-65.</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl4rxi26m0000643bcx7hfbgl","category_id":"cl4rxkjbd00006q3bfmn54djj","_id":"cl4rxkjbf00016q3b6d0sewpn"}],"PostTag":[{"post_id":"cl4rxi26m0000643bcx7hfbgl","tag_id":"cl4rxqrzp00007y3ba4m4b3rj","_id":"cl4rxqrzr00027y3b3hv2d6go"},{"post_id":"cl4rxi26m0000643bcx7hfbgl","tag_id":"cl4rxqrzq00017y3be4tr1xv9","_id":"cl4rxqrzr00037y3b73gw3rup"}],"Tag":[{"name":"λ演算 Haskell","_id":"cl4rxm18p0000713b5gjs6vrk"},{"name":"λ演算, Haskell","_id":"cl4rxmltb00007c3b0cpa3ko9"},{"name":"λ演算","_id":"cl4rxqrzp00007y3ba4m4b3rj"},{"name":"Haskell","_id":"cl4rxqrzq00017y3be4tr1xv9"}]}}